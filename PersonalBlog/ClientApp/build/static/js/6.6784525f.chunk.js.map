{"version":3,"sources":["img/logo.png","Components/Nav.js","Components/Header.js","img/profile.jpg","Components/Tools/useForm.js","Components/Tools/FormValidationRules.js","Components/Comments.js","Components/Utilities/BlogDetailsSkeleton.js","Pages/BlogDetails.js"],"names":["module","exports","Nav","header","useState","isSticky","setIsSticky","ref","useRef","useEffect","cachedRef","current","observer","IntersectionObserver","e","intersectionRatio","threshold","observe","unobserve","className","to","src","logo","alt","onClick","document","querySelector","classList","toggle","Header","img","text","pickAphorism","aphorism","setAphorism","then","i","writer","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","preventDefault","handleChange","target","name","value","prevValues","commentValidation","username","commentText","connect","state","blogReducer","dispatch","addComment","bindActionCreators","commentList","blogId","loadingComments","onSubmit","onChange","type","placeholder","rows","commenttext","LoadingSpinner","sort","a","b","commentId","reverse","map","j","key","BlogDetailsSkeleton","id","ui","uiReducer","getBlogById","incrementView","blogs","loadingBlogs","useParams","history","useHistory","readTime","setReadTime","wordCount","setWordCount","undefined","blog","setBlog","find","Number","timer","setTimeout","textExtractor","node","childNodes","forEach","nodeName","prev","textContent","split","DOMParser","parseFromString","content","body","clearTimeout","Math","floor","Helmet","mainImage","viewCount","commentCount","dangerouslySetInnerHTML","__html","writerProfilePictureUrl","profileImg","writerName","writerSummary","comments"],"mappings":"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","file":"static/js/6.6784525f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bebb124e.png\";","import React, { useEffect, useState, useRef } from \"react\";\r\n//Router\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../img/logo.png\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Nav = ({ header }) => {\r\n\r\n  const [isSticky, setIsSticky] = useState(false);\r\n  const ref = useRef();\r\n\r\n  //sticky nav class toggle\r\n  useEffect(() => {\r\n    const cachedRef = ref.current,\r\n      observer = new IntersectionObserver(\r\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\r\n        { threshold: [1] }\r\n      );\r\n\r\n    observer.observe(cachedRef);\r\n\r\n    return function () {\r\n      observer.unobserve(cachedRef);\r\n    };\r\n  }, []);\r\n\r\n  const expandNav = () => {\r\n    document\r\n      .querySelector(\".first-line\")\r\n      .classList.toggle(\"first-line-activated\");\r\n    document\r\n      .querySelector(\".second-line\")\r\n      .classList.toggle(\"second-line-activated\");\r\n    document\r\n      .querySelector(\".third-line\")\r\n      .classList.toggle(\"third-line-activated\");\r\n    document.querySelector(\".nav-expand\").classList.toggle(\"expanded\");\r\n    document.querySelector(\".nav-expand-links\").classList.toggle(\"d-none\");\r\n  };\r\n\r\n  const renderHeaderText = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/blogs\">\r\n          <i className=\"fas fa-angle-left fa-2x\"></i>\r\n            </Link>\r\n            <div>{header}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav ref={ref} className={isSticky ? \"isSticky\" : \"\"}>\r\n        <div className=\"container\">\r\n          {header && isSticky ? (\r\n            \"\"\r\n          ) : (\r\n            <div className=\"brand\">\r\n              <Link to=\"/\">\r\n                <img src={logo} alt=\"\" className=\"brand-img\" />\r\n              </Link>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sticky-header\">\r\n            {isSticky && header ? renderHeaderText() : \"\"}\r\n          </div>\r\n          <div onClick={expandNav} className=\"nav-expand-btn\">\r\n            <div className=\"btn-line first-line\"></div>\r\n            <div className=\"btn-line second-line\"></div>\r\n            <div className=\"btn-line third-line\"></div>\r\n          </div>\r\n          <div className=\"nav-expand\">\r\n            <ul className=\"nav-expand-links d-none\">\r\n              <li>\r\n                <Link to=\"/blogs\">Yazılarım</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <ul className=\"nav-links\">\r\n            <li>\r\n              <Link to=\"/blogs\">Yazılarım</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Header = ({ img, text, pickAphorism }) => {\r\n  const [aphorism, setAphorism] = useState();\r\n\r\n  useEffect(() => {\r\n    if (pickAphorism) {\r\n      pickAphorism().then((i) => setAphorism(i));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron\">\r\n        <img src={img} alt=\"\" />\r\n        <h1 className=\"jumbotron-text\">\r\n          <div>\r\n            {aphorism\r\n              ? aphorism.aphorism\r\n              : text || \"bilelim.com'a hoşgeldiniz! Keyifli okumalar.\"}\r\n          </div>\r\n          <small>{aphorism ? `- ${aphorism.writer}` : \"\"}</small>\r\n        </h1>\r\n      </div>\r\n      <Nav header={text} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","module.exports = __webpack_public_path__ + \"static/media/profile.b862ee27.jpg\";","import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setErrors(validate(values));\r\n  };\r\n\r\n  const handleChange = e => {\r\n    let { name, value } = e.target;\r\n    setValues(prevValues => ({ ...prevValues, [name]: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [callback, errors, isSubmitting]);\r\n\r\n  return {\r\n    values,\r\n    handleSubmit,\r\n    handleChange,\r\n    errors\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","export const commentValidation = values => {\r\n  let errors = {};\r\n  if (!values.username) {\r\n    errors.username = \"İsim girmek zorunludur.\";\r\n  } else if (values.username.length > 30) {\r\n    errors.username = \"İsim alanı en fazla 30 karakter olmalıdır.\";\r\n  }\r\n\r\n  if (!values.commentText) {\r\n      errors.commentText = \"Yorum kısmı boş bırakılamaz\";\r\n  } else if (values.commentText > 140) {\r\n      errors.commentText = \"Yorumunuz en fazla 140 karakter olmalıdır.\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n","import React from \"react\";\r\nimport useForm from \"./Tools/useForm\";\r\nimport { commentValidation } from \"./Tools/FormValidationRules\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addComment } from \"../Redux/actions/blogActions\";\r\nimport LoadingSpinner from \"./Utilities/LoadingSpinner\";\r\n\r\nconst Comments = ({\r\n    commentList,\r\n    addComment,\r\n    blogId,\r\n    blogReducer: { loadingComments }\r\n}) => {\r\n    let { handleChange, handleSubmit, values, errors } = useForm(\r\n        comment,\r\n        commentValidation\r\n    );\r\n\r\n    function comment() {\r\n        values.blogId = blogId;\r\n        addComment(values);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"comment-section\">\r\n                <h3>Yorumlar</h3>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"İsminiz..\"\r\n                            value={values.username || \"\"}\r\n                        />\r\n                        {errors.username && (\r\n                            <small className=\"input-error\">{errors.username}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"commentText\"\r\n                            placeholder=\"Yorumunuz..\"\r\n                            value={values.commentText || \"\"}\r\n                            rows=\"4\"\r\n                        ></textarea>\r\n                        {errors.commenttext && (\r\n                            <small className=\"input-error\">{errors.commenttext}</small>\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        {loadingComments ? <LoadingSpinner/> : \"\"}\r\n                        <button type=\"submit\">\r\n                            {loadingComments ? \"Yorumunuz ekleniyor..\" : \"Yorum Yap\"}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"comments\">\r\n                    {commentList &&\r\n                        commentList.sort((a,b) => a.commentId - b.commentId).reverse().map((i, j) => (\r\n                            <div key={j} className=\"card\">\r\n                                <div className=\"card-details\">\r\n                                    <h4>{i.username}</h4>\r\n                                    <p>{i.commentText}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addComment: bindActionCreators(addComment, dispatch),\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        blogReducer: state.blogReducer,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n","import React from \"react\";\r\n\r\nconst BlogDetailsSkeleton = () => {\r\n  return (\r\n    <>\r\n      <section className=\"blog-detail-layout\">\r\n        <section id=\"blog-content\">\r\n          <div className=\"blog-info\">\r\n            <div className=\"small-line\"></div>\r\n          </div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n        </section>\r\n\r\n        <section className=\"author\">\r\n          <div className=\"img-skeleton\"></div>\r\n          <div className=\"small-line\"></div>\r\n          <div className=\"small-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n        </section>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogDetailsSkeleton;\r\n","import React, { useEffect, useState } from \"react\";\r\n//Components\r\nimport profileImg from \"../img/profile.jpg\";\r\nimport Comments from \"../Components/Comments\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getBlogById, incrementView } from \"../Redux/actions/blogActions\";\r\nimport Header from \"../Components/Header\";\r\nimport BlogDetailsSkeleton from \"../Components/Utilities/BlogDetailsSkeleton\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst BlogDetails = ({ getBlogById, blogReducer: { blogs, loadingBlogs } }) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [readTime, setReadTime] = useState(0);\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [blog, setBlog] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!blogs.find((i) => i.blogId === Number(id))) {\r\n      getBlogById(id, history);\r\n    } else {\r\n      setBlog(blogs.find((i) => i.blogId === Number(id)));\r\n    }\r\n  }, [blogs]);\r\n\r\n  useEffect(() => {\r\n    if (blog) {\r\n      var timer = setTimeout(() => {\r\n        incrementView(blog.blogId);\r\n      }, 10000);\r\n      let parser = new DOMParser();\r\n      var { body } = parser.parseFromString(blog.content, \"text/html\");\r\n      textExtractor(body, wordCount);\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [blog]);\r\n\r\n  useEffect(() => {\r\n    setReadTime(Math.floor(wordCount / 200));\r\n  }, [wordCount]);\r\n\r\n  function textExtractor(node) {\r\n    node.childNodes.forEach((i) => {\r\n      if (i.nodeName === \"#text\")\r\n        setWordCount((prev) => prev + i.textContent.split(\" \").length);\r\n      else if (i.childNodes.length !== 0) textExtractor(i);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{blog ? blog.header : \"Bilelim - Makale\"}</title>\r\n      </Helmet>\r\n      {\r\n        <>\r\n          <Header img={blog && blog.mainImage} text={blog && blog.header} />\r\n          <main className=\"container\">\r\n            {loadingBlogs ? (\r\n              <BlogDetailsSkeleton />\r\n            ) : (\r\n              blog && (\r\n                <>\r\n                  <section className=\"blog-detail-layout\">\r\n                    <section id=\"blog-content\">\r\n                      <p className=\"blog-info\">\r\n                        <span className=\"blog-details-icon\">\r\n                          <i className=\"fas fa-eye\"></i> {blog.viewCount}\r\n                        </span>\r\n                        <span className=\"blog-details-icon\">\r\n                          <i className=\"fas fa-comment\"></i> {blog.commentCount}\r\n                        </span>\r\n                        <span>\r\n                          <i className=\"far fa-clock\"></i> {readTime} dakikalık\r\n                          okuma\r\n                        </span>\r\n                      </p>\r\n                      <div\r\n                        className=\"html-content\"\r\n                        dangerouslySetInnerHTML={{ __html: blog.content }}\r\n                      ></div>\r\n                    </section>\r\n\r\n                    <section className=\"author\">\r\n                      <div className=\"author-img\">\r\n                        <img\r\n                          src={blog.writerProfilePictureUrl || profileImg}\r\n                          alt=\"profile placeholder\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"author-details\">\r\n                        <small>Yazar</small>\r\n                        <h4>{blog.writerName}</h4>\r\n                        <p>{blog.writerSummary}</p>\r\n                      </div>\r\n                    </section>\r\n                  </section>\r\n                  <Comments blogId={blog.blogId} commentList={blog.comments} />\r\n                </>\r\n              )\r\n            )}\r\n          </main>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    blogReducer: state.blogReducer,\r\n    ui: state.uiReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getBlogById: bindActionCreators(getBlogById, dispatch),\r\n  incrementView,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetails);\r\n"],"sourceRoot":""}
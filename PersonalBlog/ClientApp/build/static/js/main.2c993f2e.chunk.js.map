{"version":3,"sources":["Redux/actions/actionTypes.js","Redux/actions/dispatchActionResult.js","Redux/actions/blogActions.js","Components/Utilities/LoadingSpinner.js","img/LoadingSpinner.gif","Components/Footer.js","Components/Tools/ScrollToTop.js","Components/Utilities/PageLoading.js","App.js","serviceWorker.js","Redux/reducers/blogReducer.js","Redux/reducers/categoryReducer.js","Redux/reducers/uiReducer.js","Redux/reducers/index.js","Redux/reducers/configureStore.js","index.js"],"names":["GET_BLOGS_SUCCESS","GET_CATEGORIES_SUCCESS","CHANGE_CATEGORY","GET_BLOGBYID_SUCCESS","GET_BLOG_COUNT_SUCCESS","ADD_COMMENT_SUCCESS","LOADING_UI","STOP_LOADING_UI","LOADING_BLOGS","LOADING_COMMENTS","STOP_LOADING_COMMENTS","SET_ACTION_SUCCESS","SET_ACTION_ERROR","CLEAR_ACTION_RESULT","dispatchActionResult","dispatch","isSuccess","payload","type","actionTypes","setTimeout","getBlogCount","a","axios","get","res","data","console","log","getBlogs","page","request","getBlogById","blogId","history","push","incrementView","put","addComment","comment","post","styles","display","width","margin","LoadingSpinner","src","loadingSpinner","alt","style","module","exports","Footer","className","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","PageLoading","height","justifyContent","alignItems","connect","state","ui","uiReducer","bindActionCreators","resultMessage","useState","initialLoad","setInitialLoad","alertify","success","error","Home","loadable","fallback","NotFound","Blogs","BlogDetails","exact","path","component","Boolean","location","hostname","match","initialState","blogs","blogCount","hasMoreBlogs","loadingComments","loadingBlogs","blogReducer","action","i","length","j","splice","blogToAdd","find","newState","map","blog","Object","assign","comments","categories","currentCategory","categoryReducer","loading","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","configureStore","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"4GAAA,4dAAO,IAAMA,EAAoB,oBACpBC,EAAyB,yBACzBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAAyB,yBAGzBC,EAAsB,sBAEtBC,EAAa,aACbC,EAAkB,kBAElBC,EAAgB,gBAEhBC,EAAmB,mBACnBC,EAAwB,wBAKxBC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAsB,uB,8PCHpBC,EAjBc,SAACC,EAAUC,EAAWC,GAE3CF,EADAC,EACS,CACLE,KAAMC,IACNF,QAASA,GAGJ,CACLC,KAAMC,IACNF,QAASA,IAGjBG,YAAW,WACPL,EAAS,CAAEG,KAAMC,QAClB,MCZME,EAAe,yDAAM,WAAON,GAAP,eAAAO,EAAA,+EAEdC,IAAMC,IAAI,oBAFI,OAE1BC,EAF0B,OAG9BV,EAAS,CAAEG,KAAMC,IAAoCF,QAASQ,EAAIC,OAHpC,gDAK9BC,QAAQC,IAAR,MAL8B,yDAAN,uDASfC,EAAW,SAACC,GACvB,8CAAO,WAAOf,GAAP,eAAAO,EAAA,sEAEHP,EAAS,CAAEG,KAAMC,MAFd,SAGiBI,IAAMC,IAAN,2BAA8BM,GAAQ,IAHvD,OAGCC,EAHD,OAIHhB,EAAS,CAAEG,KAAMC,IAA+BF,QAASc,EAAQL,OAJ9D,gDAMHC,QAAQC,IAAR,MANG,yDAAP,uDAWWI,EAAc,SAACC,EAAQC,GAAT,8CAAqB,WAAOnB,GAAP,eAAAO,EAAA,sEAE5CP,EAAS,CAAEG,KAAMC,MAF2B,SAG5BI,IAAMC,IAAN,qBAAwBS,IAHI,OAGxCR,EAHwC,OAI5CV,EAAS,CAAEG,KAAMC,IAAkCF,QAASQ,EAAIC,OAChEX,EAAS,CAAEG,KAAMC,MAL2B,gDAO5Ce,EAAQC,KAAK,QAP+B,yDAArB,uDAWdC,EAAa,uCAAG,WAAOH,GAAP,SAAAX,EAAA,+EAEnBC,IAAMc,IAAN,0CAA6CJ,IAF1B,sDAIzBN,QAAQC,IAAR,MAJyB,wDAAH,sDAQbU,EAAa,SAACC,GACzB,8CAAO,WAAOxB,GAAP,SAAAO,EAAA,6DACLP,EAAS,CAAEG,KAAMC,MADZ,kBAGGI,IAAMiB,KAAK,wBAAyBD,GAHvC,OAIHxB,EAAS,CACPG,KAAMC,IACNF,QAASsB,IAEXzB,EAAqBC,GAAU,EAAM,sBARlC,gDAUHD,EACEC,GACA,EACA,qFAEFA,EAAS,CAAEG,KAAMC,MAfd,yDAAP,wD,gCC7CF,qCAGMsB,EAAS,CACbC,QAAS,QACTC,MAAO,OACPC,OAAQ,UAKKC,IAFQ,kBAAM,yBAAKC,IAAKC,IAAgBC,IAAI,GAAGC,MAAOR,M,mBCTrES,EAAOC,QAAU,IAA0B,4C,4IC6B5BC,EA3BA,WACb,OACE,oCACE,gCACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,aACb,6BACE,uBAAGA,UAAU,yBACb,uDAEF,6BACE,uBAAGA,UAAU,iBACb,mDAEF,6BACE,uBAAGA,UAAU,0BAInB,yBAAKA,UAAU,aACX,uG,gBCTGC,EAVK,WAAO,IACnBC,EAAaC,cAAbD,SAMN,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,M,yCCSMK,EAhBK,WASlB,OACE,yBAAKX,MATS,CACdY,OAAQ,QACRlB,MAAO,QACPD,QAAS,OACToB,eAAgB,SAChBC,WAAY,WAKV,kBAAClB,EAAA,EAAD,Q,QCsDSmB,eARS,SAACC,GAAD,MAAY,CAClCC,GAAID,EAAME,cAGe,SAACpD,GAAD,MAAe,CACxCM,aAAc+C,YAAmB/C,IAAcN,MAGlCiD,EArDH,SAAC,GAAwD,IAAD,IAArDE,GAAMlD,EAA+C,EAA/CA,UAAWqD,EAAoC,EAApCA,cAAiBhD,EAAmB,EAAnBA,aAAmB,EAC5BiD,oBAAS,GADmB,mBAC3DC,EAD2D,KAC9CC,EAD8C,KAGlEf,qBAAU,WACRpC,MACC,IAEHoC,qBAAU,WACHc,GAAiC,KAAlBF,IACdrD,EACFyD,IAASC,QAAQL,GAEjBI,IAASE,MAAMN,IAGnBG,GAAe,KACd,CAACxD,EAAWqD,IAEf,IAAMO,EAAOC,aAAS,kBAAM,qDAAwB,CAClDC,SAAU,kBAAC,EAAD,QAENC,EAAWF,aAAS,kBAAM,qDAA4B,CAC1DC,SAAU,kBAAC,EAAD,QAENE,EAAQH,aAAS,kBAAM,qDAAyB,CACpDC,SAAU,kBAAC,EAAD,QAENG,EAAcJ,aAAS,kBAAM,qDAA+B,CAChEC,SAAU,kBAAC,EAAD,QAGZ,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,SAASC,UAAWJ,IACtC,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,aAAaC,UAAWH,IAC1C,kBAAC,IAAD,CAAOG,UAAWL,KAEpB,kBAAC,EAAD,U,QC3CcM,QACW,cAA7B3B,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2D,0CChBFC,EAAe,CACfC,MAAO,GACP5D,KAAM,EACN6D,UAAU,EACVC,cAAa,EACbC,iBAAiB,EACjBC,cAAa,GA2DFC,EAxDK,WAAmC,IAAlC9B,EAAiC,uDAAzBwB,EAAcO,EAAW,uCAClD,OAAQA,EAAO9E,MAEX,KAAKC,IACD,OAAO,2BAAK8C,GAAZ,IAAmB0B,UAAWK,EAAO/E,UAEzC,KAAKE,IAED,IAAK,IAAI8E,EAAI,EAAGA,EAAID,EAAO/E,QAAQiF,OAAQD,IACnC,IAAK,IAAIE,EAAI,EAAGA,EAAIlC,EAAMyB,MAAMQ,OAAQC,IAChCH,EAAO/E,QAAQgF,GAAGhE,SAAWgC,EAAMyB,MAAMS,GAAGlE,QAC5CgC,EAAMyB,MAAMU,OAAOD,EAAG,GAKtC,OAAO,2BACAlC,GADP,IAEIyB,MAAM,GAAD,mBAAMzB,EAAMyB,OAAZ,YAAsBM,EAAO/E,UAClC6E,cAAc,EACdhE,KAAMmC,EAAMnC,KAAO,EACnB8D,eAAcI,EAAO/E,QAAQiF,OAAS,KAG9C,KAAK/E,IACD,OAAO,2BAAK8C,GAAZ,IAAmByB,MAAM,GAAD,mBAAMzB,EAAMyB,OAAZ,CAAmBM,EAAO/E,YAEtD,KAAKE,IACD,OAAO,2BAAK8C,GAAZ,IAAmB4B,iBAAiB,IAExC,KAAK1E,IACD,OAAO,2BAAK8C,GAAZ,IAAmB4B,iBAAiB,IAExC,KAAK1E,IACD,OAAO,2BAAK8C,GAAZ,IAAmB6B,cAAc,IAErC,KAAK3E,IACD,IAAIkF,EAAYpC,EAAMyB,MAAMY,MACxB,SAACL,GAAD,OAAOA,EAAEhE,SAAW+D,EAAO/E,QAAQgB,UAEnCsE,EAAWtC,EAAMyB,MAAMc,KAAI,SAACC,GAC5B,OAAIA,EAAKxE,SAAW+D,EAAO/E,QAAQgB,OACxByE,OAAOC,OAAO,GAAIN,EAAW,CAChCO,SAAS,GAAD,mBAAMP,EAAUO,UAAhB,CAA0BZ,EAAO/E,YAGtCwF,KAGf,MAAO,CAAEf,MAAM,YAAKa,GAAWV,iBAAiB,GAEpD,QACI,OAAO5B,IC7DbwB,EAAe,CACnBoB,WAAY,GACZC,gBAAiB,IAcJC,EAXS,WAAmC,IAAlC9C,EAAiC,uDAAzBwB,EAAcO,EAAW,uCACxD,OAAQA,EAAO9E,MACb,KAAKC,IACH,OAAO,2BAAK8C,GAAZ,IAAmB4C,WAAYb,EAAO/E,UACxC,KAAKE,IACH,OAAO,2BAAK8C,GAAZ,IAAmB6C,gBAAiBd,EAAO/E,UAC7C,QACE,OAAOgD,ICZPwB,EAAe,CACnBuB,SAAS,EACPhG,WAAW,EACXqD,cAAc,IAqBHF,EAlBG,WAAmC,IAAlCF,EAAiC,uDAAzBwB,EAAcO,EAAW,uCAClD,OAAQA,EAAO9E,MACb,KAAKC,IACH,OAAO,2BAAK8C,GAAZ,IAAmB+C,SAAS,IAC9B,KAAK7F,IACH,OAAO,2BAAK8C,GAAZ,IAAmB+C,SAAS,IAC9B,KAAK7F,IACC,OAAO,2BAAK8C,GAAZ,IAAmB+C,SAAS,EAAOhG,WAAU,EAAMqD,cAAe2B,EAAO/E,UAC7E,KAAKE,IACD,OAAO,2BAAK8C,GAAZ,IAAmB+C,SAAS,EAAOhG,WAAW,EAAOqD,cAAe2B,EAAO/E,UAC/E,KAAKE,IACD,OAAO,2BAAK8C,GAAZ,IAAmBI,cAAe,KAExC,QACE,OAAOJ,ICXEgD,EANKC,YAAgB,CAClCnB,cACAgB,kBACE5C,c,QCFEgD,EAAmBzD,OAAO0D,sCAAwCC,ICIlEC,EDHiB,kBACrBC,YAAYN,EAAaE,EAAiBK,YAAgBC,OCE9CC,GAEdC,iBACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAGJM,SAASC,eAAe,SNiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzD,GACLhD,QAAQgD,MAAMA,EAAM0D,c","file":"static/js/main.2c993f2e.chunk.js","sourcesContent":["export const GET_BLOGS_SUCCESS = \"GET_BLOGS_SUCCESS\";\r\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\";\r\nexport const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\r\nexport const GET_BLOGBYID_SUCCESS = \"GET_BLOGBYID_SUCCESS\";\r\nexport const GET_BLOG_COUNT_SUCCESS = \"GET_BLOG_COUNT_SUCCESS\";\r\n\r\nexport const REMOVE_COMMENT_SUCCESS = \"REMOVE_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\n\r\nexport const LOADING_UI = \"LOADING_UI\";\r\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\r\n\r\nexport const LOADING_BLOGS = \"LOADING_BLOGS\";\r\n\r\nexport const LOADING_COMMENTS = \"LOADING_COMMENTS\";\r\nexport const STOP_LOADING_COMMENTS = \"STOP_LOADING_COMMENTS\";\r\n\r\nexport const AUTHENTICATE = \"AUTHENTICATE\";\r\nexport const UNAUTHENTICATE = \"UNAUTHENTICATE\";\r\n\r\nexport const SET_ACTION_SUCCESS = \"SET_ACTION_SUCCESS\";\r\nexport const SET_ACTION_ERROR = \"SET_ACTION_ERROR\";\r\nexport const CLEAR_ACTION_RESULT = \"CLEAR_ACTION_RESULT\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst dispatchActionResult = (dispatch, isSuccess, payload) => {\r\n    if (isSuccess) {\r\n        dispatch({\r\n            type: actionTypes.SET_ACTION_SUCCESS,\r\n            payload: payload,\r\n        });\r\n    } else {\r\n        dispatch({\r\n            type: actionTypes.SET_ACTION_ERROR,\r\n            payload: payload,\r\n        });\r\n    }\r\n    setTimeout(() => {\r\n        dispatch({ type: actionTypes.CLEAR_ACTION_RESULT });\r\n    }, 5000);\r\n};\r\n\r\nexport default dispatchActionResult;\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\nimport dispatchActionResult from \"./dispatchActionResult\";\r\n\r\nexport const getBlogCount = () => async (dispatch) => {\r\n  try {\r\n    var res = await axios.get(\"/api/blogs/count\");\r\n    dispatch({ type: actionTypes.GET_BLOG_COUNT_SUCCESS, payload: res.data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const getBlogs = (page) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: actionTypes.LOADING_BLOGS });\r\n      let request = await axios.get(`/api/blogs/?page=${page || 0}`);\r\n      dispatch({ type: actionTypes.GET_BLOGS_SUCCESS, payload: request.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getBlogById = (blogId, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.LOADING_UI });\r\n    let res = await axios.get(`/api/blogs/${blogId}`);\r\n    dispatch({ type: actionTypes.GET_BLOGBYID_SUCCESS, payload: res.data });\r\n    dispatch({ type: actionTypes.STOP_LOADING_UI });\r\n  } catch (e) {\r\n    history.push(\"/404\");\r\n  }\r\n};\r\n\r\nexport const incrementView = async (blogId) => {\r\n  try {\r\n    await axios.put(`/api/blogs/incrementview?blogId=${blogId}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const addComment = (comment) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: actionTypes.LOADING_COMMENTS });\r\n    try {\r\n      await axios.post(\"/api/blogs/addcomment\", comment);\r\n      dispatch({\r\n        type: actionTypes.ADD_COMMENT_SUCCESS,\r\n        payload: comment,\r\n      });\r\n      dispatchActionResult(dispatch, true, \"Yorumunuz eklendi.\");\r\n    } catch (error) {\r\n      dispatchActionResult(\r\n        dispatch,\r\n        false,\r\n        \"Yorumunuz eklenirken bir hata oluştu. Lüften daha sonra tekrar deneyiniz.\"\r\n      );\r\n      dispatch({ type: actionTypes.STOP_LOADING_COMMENTS });\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport loadingSpinner from \"../../img/LoadingSpinner.gif\";\r\n\r\nconst styles = {\r\n  display: \"block\",\r\n  width: \"70px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nconst LoadingSpinner = () => <img src={loadingSpinner} alt=\"\" style={styles} />;\r\n\r\nexport default LoadingSpinner;\r\n","module.exports = __webpack_public_path__ + \"static/media/LoadingSpinner.954e0c81.gif\";","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <div className=\"credentials\">\r\n          <div className=\"container\">\r\n            <div>\r\n              <i className=\"far fa-envelope-open\"></i>\r\n              <span>mfyilmaz95@gmail.com</span>\r\n            </div>\r\n            <div>\r\n              <i className=\"fas fa-globe\"></i>\r\n              <span>www.myyilmaz.com</span>\r\n            </div>\r\n            <div>\r\n              <i className=\"fab fa-linkedin-in\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"copyright\">\r\n            <small>© 2020 Tüm hakları saklıdır. www.myblog.com</small>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  let { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\n\r\nconst PageLoading = () => {\r\n  const wrapper = {\r\n    height: \"100vh\",\r\n    width: \"100wh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  return (\r\n    <div style={wrapper}>\r\n      <LoadingSpinner />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLoading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.scss\";\r\n//Router\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Footer from \"./Components/Footer\";\r\nimport { connect } from \"react-redux\";\r\n//Actions\r\nimport { getBlogCount } from \"./Redux/actions/blogActions\";\r\nimport ScrollToTop from \"./Components/Tools/ScrollToTop\";\r\nimport alertify from \"alertifyjs\";\r\nimport \"alertifyjs/build/css/alertify.min.css\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PageLoading from \"./Components/Utilities/PageLoading\";\r\nimport loadable from \"@loadable/component\";\r\n\r\nconst App = ({ ui: { isSuccess, resultMessage }, getBlogCount }) => {\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getBlogCount();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!initialLoad && resultMessage !== \"\") {\r\n      if (isSuccess) {\r\n        alertify.success(resultMessage);\r\n      } else {\r\n        alertify.error(resultMessage);\r\n      }\r\n    }\r\n    setInitialLoad(false);\r\n  }, [isSuccess, resultMessage]);\r\n\r\n  const Home = loadable(() => import(\"./Pages/Home\"), {\r\n    fallback: <PageLoading />,\r\n  });\r\n  const NotFound = loadable(() => import(\"./Pages/NotFound\"), {\r\n    fallback: <PageLoading />,\r\n  });\r\n  const Blogs = loadable(() => import(\"./Pages/Blogs\"), {\r\n    fallback: <PageLoading />,\r\n  });\r\n  const BlogDetails = loadable(() => import(\"./Pages/BlogDetails\"), {\r\n    fallback: <PageLoading />,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ScrollToTop />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/blogs\" component={Blogs} />\r\n        <Route exact path=\"/blogs/:id\" component={BlogDetails} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ui: state.uiReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getBlogCount: bindActionCreators(getBlogCount, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nlet initialState = {\r\n    blogs: [],\r\n    page: 0,\r\n    blogCount:0,\r\n    hasMoreBlogs:true,\r\n    loadingComments: false,\r\n    loadingBlogs:false\r\n};\r\n\r\nconst blogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.GET_BLOG_COUNT_SUCCESS:\r\n            return { ...state, blogCount: action.payload }\r\n\r\n        case actionTypes.GET_BLOGS_SUCCESS:\r\n            //removing duplicates\r\n            for (var i = 0; i < action.payload.length; i++) {\r\n                    for (var j = 0; j < state.blogs.length; j++) {\r\n                        if (action.payload[i].blogId === state.blogs[j].blogId) {\r\n                            state.blogs.splice(j, 1);\r\n                        }\r\n                    }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                blogs: [...state.blogs, ...action.payload],\r\n                loadingBlogs: false,\r\n                page: state.page + 1,\r\n                hasMoreBlogs: action.payload.length < 3 ? false : true\r\n            };\r\n\r\n        case actionTypes.GET_BLOGBYID_SUCCESS:\r\n            return { ...state, blogs: [...state.blogs, action.payload] }\r\n\r\n        case actionTypes.LOADING_COMMENTS:\r\n            return { ...state, loadingComments: true };\r\n\r\n        case actionTypes.STOP_LOADING_COMMENTS:\r\n            return { ...state, loadingComments: false };\r\n\r\n        case actionTypes.LOADING_BLOGS:\r\n            return { ...state, loadingBlogs: true };\r\n\r\n        case actionTypes.ADD_COMMENT_SUCCESS:\r\n            let blogToAdd = state.blogs.find(\r\n                (i) => i.blogId === action.payload.blogId\r\n            );\r\n            let newState = state.blogs.map((blog) => {\r\n                if (blog.blogId === action.payload.blogId) {\r\n                    return Object.assign({}, blogToAdd, {\r\n                        comments: [...blogToAdd.comments, action.payload],\r\n                    });\r\n                } else {\r\n                    return blog;\r\n                }\r\n            });\r\n            return { blogs: [...newState], loadingComments: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default blogReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  currentCategory: {}\r\n};\r\n\r\nconst categoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CATEGORIES_SUCCESS:\r\n      return { ...state, categories: action.payload };\r\n    case actionTypes.CHANGE_CATEGORY:\r\n      return { ...state, currentCategory: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default categoryReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n    isSuccess: false,\r\n    resultMessage:\"\"\r\n};\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOADING_UI:\r\n      return { ...state, loading: true };\r\n    case actionTypes.STOP_LOADING_UI:\r\n      return { ...state, loading: false };\r\n    case actionTypes.SET_ACTION_SUCCESS:\r\n          return { ...state, loading: false, isSuccess:true, resultMessage: action.payload };\r\n      case actionTypes.SET_ACTION_ERROR:\r\n          return { ...state, loading: false, isSuccess: false, resultMessage: action.payload };\r\n      case actionTypes.CLEAR_ACTION_RESULT:\r\n          return { ...state, resultMessage: \"\"}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport blogReducer from \"./blogReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport uiReducer from \"./uiReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blogReducer,\r\n  categoryReducer,\r\n    uiReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//const configureStore = () => createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst configureStore = () =>\r\n  createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport App from \"./App\";\nimport { render } from 'react-snapshot';\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n//Redux\nimport configureStore from \"./Redux/reducers/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nrender(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["img/homescreen.jpg","img/logo.png","img/blogs.jpg","img/profile.jpg","Redux/actions/blogActions.js","Redux/actions/actionTypes.js","Redux/actions/categoryActions.js","Components/Tools/Select.js","Components/CategoryList.js","Components/Utilities/BlogListSkeleton.js","Components/BlogList.js","Components/Nav.js","Components/Header.js","Pages/Home.js","Pages/NotFound.js","Pages/Blogs.js","Components/Tools/useForm.js","Components/Tools/FormValidationRules.js","Components/Comments.js","Components/Utilities/BlogDetailsSkeleton.js","Pages/BlogDetails.js","Components/Footer.js","Redux/actions/authActions.js","App.js","serviceWorker.js","Redux/reducers/blogReducer.js","Redux/reducers/categoryReducer.js","Redux/reducers/uiReducer.js","Redux/reducers/authReducer.js","Redux/reducers/index.js","Redux/reducers/configureStore.js","index.js"],"names":["module","exports","getBlogs","dispatch","type","axios","get","then","handleResponse","resp","payload","catch","handleError","incrementView","blogId","post","addComment","comment","removeComment","status","data","err","console","log","getCategories","changeCategory","category","Select","selectedCategory","items","changeCategoryHandler","useState","selected","setSelected","handleOption","categoryName","onClick","e","arrow","document","querySelector","classList","toggle","className","map","key","categoryId","connect","state","categories","categoryReducer","bindActionCreators","useEffect","length","currentCategory","BlogListSkeleton","blogs","blogReducer","ui","uiReducer","path","getLatestBlogs","loading","indexOf","onBlogsPage","slice","filter","blog","to","src","mainImage","alt","header","addedDate","viewCount","commentCount","auth","authReducer","logo","authenticated","href","Header","img","text","Home","match","homeimg","NotFound","Blogs","blogimg","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","handleSubmit","preventDefault","handleChange","target","name","value","prevValues","commentValidation","username","commenttext","commentList","onSubmit","onChange","placeholder","rows","i","commentId","commentText","handleDelete","BlogDetailsSkeleton","id","ownProps","params","find","Number","getProductById","readTime","setReadTime","content","Math","floor","split","setTimeout","dangerouslySetInnerHTML","__html","profileImg","comments","Footer","Authenticate","Unauthenticate","authenticate","unauthenticate","token","localStorage","getItem","JSON","parse","Expiration","Date","now","removeItem","exact","component","BlogDetails","Boolean","window","location","hostname","initialState","action","blogToAdd","newState","assign","blogToRemoveFrom","newState2","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8abe0f48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homescreen.89272761.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.bebb124e.png\";","module.exports = __webpack_public_path__ + \"static/media/blogs.2b64db14.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.b862ee27.jpg\";","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getBlogs = () => {\r\n  return dispatch => {\r\n    dispatch({ type: actionTypes.IS_LOADING });\r\n    axios\r\n      .get(\"http://localhost:61803/api/blogs/getblogs\")\r\n      .then(handleResponse)\r\n      .then(resp => {\r\n        dispatch({ type: actionTypes.GET_BLOGS_SUCCESS, payload: resp });\r\n        dispatch({ type: actionTypes.NOT_LOADING });\r\n      })\r\n      .catch(handleError);\r\n  };\r\n};\r\n\r\nexport const incrementView = blogId => {\r\n  axios\r\n    .post(\"http://localhost:61803/api/blogs/incrementview\", { blogId })\r\n    .catch(handleError);\r\n};\r\n\r\n//Comments\r\n\r\nexport const addComment = comment => {\r\n  return dispatch => {\r\n    return axios\r\n      .post(\"http://localhost:61803/api/blogs/addcomment\", comment)\r\n      .then(handleResponse)\r\n      .then(resp =>\r\n        dispatch({ type: actionTypes.ADD_COMMENT_SUCCESS, payload: resp })\r\n      )\r\n      .catch(handleError);\r\n  };\r\n};\r\n\r\nexport const removeComment = comment => {\r\n  return dispatch => {\r\n    return axios\r\n      .post(\"http://localhost:61803/api/blogs/removecomment\", comment)\r\n      .then(handleResponse)\r\n      .then(\r\n        dispatch({\r\n          type: actionTypes.REMOVE_COMMENT_SUCCESS,\r\n          payload: comment\r\n        })\r\n      )\r\n      .catch(handleError);\r\n  };\r\n};\r\n\r\nconst handleResponse = resp => {\r\n  if (resp.status === 200) {\r\n    return resp.data;\r\n  }\r\n};\r\n\r\nconst handleError = err => {\r\n  console.log(err);\r\n};\r\n","export const GET_BLOGS_SUCCESS = \"GET_BLOGS_SUCCESS\";\r\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\";\r\nexport const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\r\n\r\nexport const REMOVE_COMMENT_SUCCESS = \"REMOVE_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\n\r\nexport const IS_LOADING = \"IS_LOADING\";\r\nexport const NOT_LOADING = \"NOT_LOADING\";\r\n\r\nexport const AUTHENTICATE = \"AUTHENTICATE\";\r\nexport const UNAUTHENTICATE = \"UNAUTHENTICATE\";\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const getCategories = () => {\r\n  return dispatch => {\r\n    return axios\r\n      .get(\"http://localhost:61803/api/categories/getcategories\")\r\n      .then(handleResponse)\r\n      .then(resp =>\r\n        dispatch({ type: actionTypes.GET_CATEGORIES_SUCCESS, payload: resp })\r\n      )\r\n      .catch(handleError);\r\n  };\r\n};\r\n\r\nexport const changeCategory = category => {\r\n  return {\r\n    type: actionTypes.CHANGE_CATEGORY,\r\n    payload: category\r\n  };\r\n};\r\n\r\nconst handleResponse = resp => {\r\n  if (resp.status === 200) {\r\n    return resp.data;\r\n  }\r\n};\r\n\r\nconst handleError = err => {\r\n  console.log(err);\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst Select = ({\r\n  selectedCategory,\r\n  items,\r\n  changeCategoryHandler,\r\n  ...props\r\n}) => {\r\n  let [selected, setSelected] = useState(selectedCategory);\r\n\r\n  const handleSelect = e => {\r\n    const arrow = document.querySelector(\".select-arrow\");\r\n    const options = document.querySelector(\".options\");\r\n\r\n    options.classList.toggle(\"closed\");\r\n    arrow.classList.toggle(\"select-arrow-up\");\r\n  };\r\n\r\n  const handleOption = category => {\r\n    setSelected(category.categoryName || \"Tüm kategoriler\");\r\n    changeCategoryHandler(category);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleSelect} className=\"selectbox\">\r\n        {selected}\r\n        <span className=\"select-arrow\"></span>\r\n        <ul className=\"options closed\">\r\n          <li className=\"option\" onClick={() => handleOption({})}>\r\n            Tüm kategoriler\r\n          </li>\r\n          {items ? items.map(category => (\r\n            <li\r\n              key={category.categoryId}\r\n              onClick={() => handleOption(category)}\r\n              className=\"option\"\r\n            >\r\n              {category.categoryName}\r\n            </li>\r\n          )) : \"\"}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getCategories,\r\n  changeCategory\r\n} from \"../Redux/actions/categoryActions\";\r\nimport Select from \"./Tools/Select\";\r\n\r\nconst CategoryList = ({\r\n  categories,\r\n  getCategories,\r\n  changeCategory,\r\n  ...props\r\n}) => {\r\n  useEffect(() => {\r\n    if (categories.categories.length === 0) {\r\n      getCategories();\r\n    }\r\n  }, [categories.categories.length, getCategories]);\r\n\r\n  const changeCategoryHandler = category => {\r\n    changeCategory(category);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        selectedCategory={\r\n          categories.currentCategory.categoryName || \"Tüm kategoriler\"\r\n        }\r\n        items={categories.categories}\r\n        changeCategoryHandler={changeCategoryHandler}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  categories: state.categoryReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getCategories: bindActionCreators(getCategories, dispatch),\r\n  changeCategory: bindActionCreators(changeCategory, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\r\n","import React from \"react\";\r\n\r\nconst BlogListSkeleton = () => {\r\n  return (\r\n    <>\r\n      <div className=\"blog-preview\">\r\n        <div className=\"blog-img\">\r\n          <div className=\"img-skeleton\"></div>\r\n        </div>\r\n\r\n        <div className=\"blog-details\">\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"category small-line\"></div>\r\n          <small>\r\n            <div className=\"small-line\"></div>\r\n            <div className=\"small-line\"></div>\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogListSkeleton;\r\n","import React, { useEffect, useState } from \"react\";\r\n//Route\r\nimport { Link } from \"react-router-dom\";\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getBlogs } from \"../Redux/actions/blogActions\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport BlogListSkeleton from \"./Utilities/BlogListSkeleton\";\r\n\r\nconst BlogList = ({\r\n  path,\r\n  blogs,\r\n  getLatestBlogs,\r\n  getBlogs,\r\n  currentCategory,\r\n  ui: { loading },\r\n  ...props\r\n}) => {\r\n  const [onBlogsPage] = useState(path.indexOf(\"blogs\") > 0);\r\n\r\n  useEffect(() => {\r\n    if (blogs.length === 0) {\r\n      getBlogs();\r\n    }\r\n  }, [blogs.length, getBlogs, onBlogsPage]);\r\n\r\n  if (!onBlogsPage) {\r\n    //amount of items to show when rendered on home page\r\n    blogs = blogs.slice(0, 2);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className=\"container\">\r\n        {onBlogsPage ? (\r\n          <div className=\"blog-header\">\r\n            <CategoryList />\r\n          </div>\r\n        ) : (\r\n          <div className=\"blog-header\">Son Eklenenler</div>\r\n        )}\r\n\r\n        {loading ? (\r\n          <BlogListSkeleton />\r\n        ) : (\r\n          blogs\r\n            .filter(blog =>\r\n              currentCategory && onBlogsPage\r\n                ? blog.categoryName === currentCategory\r\n                : blog\r\n            )\r\n            .map(blog => (\r\n              <Link key={blog.blogId} to={`/blogs/${blog.blogId}`}>\r\n                <div className=\"blog-preview\">\r\n                  <div className=\"blog-img\">\r\n                    <img src={blog.mainImage} alt=\"\" />\r\n                  </div>\r\n\r\n                  <div className=\"blog-details\">\r\n                    <h2>{blog.header}</h2>\r\n                    <div className=\"category\">{blog.categoryName}</div>\r\n                    <small>\r\n                      <span>{blog.addedDate}, by Mustafa Yılmaz</span>\r\n                      <span>\r\n                        <span className=\"blog-details-icon\">\r\n                          <i className=\"fas fa-eye\"></i> {blog.viewCount}\r\n                        </span>\r\n                        <span className=\"blog-details-icon\">\r\n                          <i className=\"fas fa-comment\"></i> {blog.commentCount}\r\n                        </span>\r\n                      </span>\r\n                    </small>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ))\r\n        )}\r\n\r\n        {onBlogsPage ? (\r\n          \"\"\r\n        ) : (\r\n          <div className=\"link-to-blogs\">\r\n            <Link to=\"/blogs\">Tüm Yazılarım</Link>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blogs: state.blogReducer,\r\n    currentCategory: state.categoryReducer.currentCategory.categoryName,\r\n    ui: state.uiReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getBlogs: bindActionCreators(getBlogs, dispatch)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogList);\r\n","import React from \"react\";\r\n//Router\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../img/logo.png\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Nav = ({ auth }) => {\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"container\">\r\n          <div className=\"brand\">\r\n            <Link to=\"/\">\r\n              <img src={logo} alt=\"\" className=\"brand-img\" />\r\n            </Link>\r\n          </div>\r\n\r\n          <ul>\r\n            <li>\r\n                          {\r\n                              auth.authenticated ? \r\n                                  (\r\n                                      <a href=\"/admin\">Yönetim Paneli</a>\r\n                                      ) : \"\"\r\n                          }\r\n              <Link to=\"/blogs\">Yazılarım</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { auth: state.authReducer }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Nav);\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst Header = ({ img, text }) => {\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron\">\r\n        <img src={img} alt=\"\" />\r\n        <h1 className=\"jumbotron-text\">\r\n          {text || \"myblog.com'a hoşgeldiniz! Keyifli okumalar.\"}\r\n        </h1>\r\n      </div>\r\n      <Nav />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport homeimg from \"../img/homescreen.jpg\";\r\n//components\r\nimport BlogList from \"../Components/BlogList\";\r\nimport Header from \"../Components/Header\";\r\n\r\nconst Home = ({ match: { path }, ...props }) => {\r\n  return (\r\n    <>\r\n      <Header img={homeimg} />\r\n      <BlogList path={path} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            Not Found!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport blogimg from \"../img/blogs.jpg\";\r\n//Components\r\nimport BlogList from \"../Components/BlogList\";\r\nimport Header from \"../Components/Header\";\r\n\r\nconst Blogs = ({ match: { path }, ...props }) => {\r\n  return (\r\n    <>\r\n      <Header img={blogimg} />\r\n      <BlogList path={path} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blogs;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setErrors(validate(values));\r\n  };\r\n\r\n  const handleChange = e => {\r\n    let { name, value } = e.target;\r\n    setValues(prevValues => ({ ...prevValues, [name]: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [callback, errors, isSubmitting]);\r\n\r\n  return {\r\n    values,\r\n    handleSubmit,\r\n    handleChange,\r\n    errors\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","export const commentValidation = values => {\r\n  let errors = {};\r\n  if (!values.username) {\r\n    errors.username = \"İsim girmek zorunludur.\";\r\n  } else if (values.username.length > 30) {\r\n    errors.username = \"İsim alanı en fazla 30 karakter olmalıdır.\";\r\n  }\r\n\r\n  if (!values.commenttext) {\r\n    errors.commenttext = \"Yorum kısmı boş bırakılamaz\";\r\n  } else if (values.commenttext > 140) {\r\n    errors.commenttext = \"Yorumunuz en fazla 140 karakter olmalıdır.\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n","import React from \"react\";\r\nimport useForm from \"./Tools/useForm\";\r\nimport { commentValidation } from \"./Tools/FormValidationRules\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addComment, removeComment } from \"../Redux/actions/blogActions\";\r\n\r\nconst Comments = ({\r\n    commentList,\r\n    addComment,\r\n    blogId,\r\n    removeComment,\r\n    auth: { authenticated },\r\n    ...props\r\n}) => {\r\n    let { handleChange, handleSubmit, values, errors } = useForm(\r\n        comment,\r\n        commentValidation\r\n    );\r\n\r\n    function comment() {\r\n        values.blogId = blogId;\r\n        addComment(values);\r\n    }\r\n\r\n    const handleDelete = comment => {\r\n        removeComment(comment);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <section className=\"comment-section\">\r\n                <h3>Yorumlar</h3>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder=\"İsminiz..\"\r\n                            value={values.username || \"\"}\r\n                        />\r\n                        {errors.username && (\r\n                            <small className=\"input-error\">{errors.username}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"commenttext\"\r\n                            placeholder=\"Yorumunuz..\"\r\n                            value={values.commenttext || \"\"}\r\n                            rows=\"4\"\r\n                        ></textarea>\r\n                        {errors.commenttext && (\r\n                            <small className=\"input-error\">{errors.commenttext}</small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Yorum Yap</button>\r\n                </form>\r\n\r\n                <div className=\"comments\">\r\n                    {commentList &&\r\n                        commentList.map(i => (\r\n                            <div key={i.commentId} className=\"card\">\r\n                                <div className=\"card-details\">\r\n                                    <h4>{i.username}</h4>\r\n                                    <p>{i.commentText}</p>\r\n                                </div>\r\n\r\n                                {\r\n                                    authenticated ? (\r\n                                        <div\r\n                                            onClick={() => handleDelete(i)}\r\n                                            className=\"delete-comment-btn\"\r\n                                        >\r\n                                            <i className=\"fas fa-times\"></i>\r\n                                        </div>\r\n                                    ) : \"\"\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addComment: bindActionCreators(addComment, dispatch),\r\n        removeComment: bindActionCreators(removeComment, dispatch)\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.authReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n","import React from \"react\";\r\n\r\nconst BlogDetailsSkeleton = () => {\r\n  return (\r\n    <>\r\n      <section className=\"blog-detail-layout\">\r\n        <section id=\"blog-content\">\r\n          <div className=\"blog-info\">\r\n            <div className=\"small-line\"></div>\r\n          </div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n        </section>\r\n\r\n        <section className=\"author\">\r\n          <div className=\"img-skeleton\"></div>\r\n          <div className=\"small-line\"></div>\r\n          <div className=\"small-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n          <div className=\"full-line\"></div>\r\n        </section>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogDetailsSkeleton;\r\n","import React, { useEffect, useState } from \"react\";\r\n//Components\r\nimport profileImg from \"../img/profile.jpg\";\r\nimport Comments from \"../Components/Comments\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getBlogs, incrementView } from \"../Redux/actions/blogActions\";\r\nimport Header from \"../Components/Header\";\r\nimport BlogDetailsSkeleton from \"../Components/Utilities/BlogDetailsSkeleton\";\r\n\r\nconst BlogDetails = ({\r\n  match,\r\n  blogs,\r\n  getBlogs,\r\n  blog,\r\n  ui: { loading },\r\n  ...props\r\n}) => {\r\n  const [readTime, setReadTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (blogs.length === 0) {\r\n      getBlogs();\r\n    }\r\n\r\n    if (blog.content) {\r\n      setReadTime(Math.floor(blog.content.split(\" \").length / 200));\r\n      setTimeout(() => {\r\n        incrementView(blog.blogId);\r\n      }, 10000);\r\n    }\r\n  }, [blog.blogId, blog.content, blogs.length, getBlogs]);\r\n\r\n  return (\r\n    <>\r\n      <Header img={blog.mainImage} text={blog.header} />\r\n      <main className=\"container\">\r\n        {loading ? (\r\n          <BlogDetailsSkeleton />\r\n        ) : (\r\n          <>\r\n            <section className=\"blog-detail-layout\">\r\n              <section id=\"blog-content\">\r\n                <p className=\"blog-info\">\r\n                  <span className=\"blog-details-icon\">\r\n                    <i className=\"fas fa-eye\"></i> {blog.viewCount}\r\n                  </span>\r\n                  <span className=\"blog-details-icon\">\r\n                    <i className=\"fas fa-comment\"></i> {blog.commentCount}\r\n                  </span>\r\n                  <span>\r\n                    <i className=\"far fa-clock\"></i> {readTime} dakikalık okuma\r\n                  </span>\r\n                </p>\r\n                <div dangerouslySetInnerHTML={{ __html: blog.content }}></div>\r\n              </section>\r\n\r\n              <section className=\"author\">\r\n                <div className=\"author-img\">\r\n                  <img src={profileImg} alt=\"profile placeholder\" />\r\n                </div>\r\n                <div className=\"author-details\">\r\n                  <small>Yazar</small>\r\n                  <h4>Mustafa Yılmaz</h4>\r\n                  <p>\r\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                    Nobis expedita reiciendis perferendis aliquid iste quas .\r\n                  </p>\r\n                </div>\r\n              </section>\r\n            </section>\r\n            <Comments blogId={blog.blogId} commentList={blog.comments} />\r\n          </>\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nconst getProductById = (blogs, blogId) => {\r\n  const blog = blogs.find(i => i.blogId === Number(blogId)) || null;\r\n  return blog;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const blogId = ownProps.match.params.id;\r\n  const blog =\r\n    blogId && state.blogReducer.length > 0\r\n      ? getProductById(state.blogReducer, blogId)\r\n      : {};\r\n\r\n  return {\r\n    blog,\r\n    blogs: state.blogReducer,\r\n    ui: state.uiReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getBlogs: bindActionCreators(getBlogs, dispatch),\r\n  incrementView\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetails);\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <div className=\"credentials\">\r\n          <div className=\"container\">\r\n            <div>\r\n              <i className=\"far fa-envelope-open\"></i>\r\n              <span>mfyilmaz95@gmail.com</span>\r\n            </div>\r\n            <div>\r\n              <i className=\"fas fa-globe\"></i>\r\n              <span>www.myyilmaz.com</span>\r\n            </div>\r\n            <div>\r\n              <i className=\"fab fa-linkedin-in\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"copyright\">\r\n            <small>© 2020 Tüm hakları saklıdır. www.myblog.com</small>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const Authenticate = () => {\r\n    return { type: actionTypes.AUTHENTICATE };\r\n}\r\n\r\nexport const Unauthenticate = () => {\r\n    return { type: actionTypes.UNAUTHENTICATE };\r\n}","import React from \"react\";\nimport \"./App.scss\";\n//Components\nimport Home from \"./Pages/Home\";\nimport NotFound from \"./Pages/NotFound\";\nimport Blogs from \"./Pages/Blogs.js\";\nimport BlogDetails from \"./Pages/BlogDetails\";\n//Router\nimport { Route, Switch } from \"react-router-dom\";\nimport Footer from \"./Components/Footer\";\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n//Actions\r\nimport { Authenticate, Unauthenticate } from './Redux/actions/authActions';\r\n\nconst App = ({ authenticate, unauthenticate }) => {\n\n    var token = localStorage.getItem(\"token\");\n    if (token) {\n        var parsedToken = JSON.parse(token);\r\n        if (parsedToken.Expiration < Date.now()) {\r\n            localStorage.removeItem(\"token\");\r\n            unauthenticate();\r\n        } else {\r\n            authenticate();\r\n        }\r\n    }\n\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/blogs\" component={Blogs} />\n        <Route exact path=\"/blogs/:id\" component={BlogDetails} />\n        <Route component={NotFound} />\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\r\n        authenticate: bindActionCreators(Authenticate, dispatch),\r\n        unauthenticate: bindActionCreators(Unauthenticate, dispatch)\r\n    }\r\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nlet initialState = [];\r\n\r\nconst blogReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_BLOGS_SUCCESS:\r\n      return [...action.payload];\r\n\r\n    case actionTypes.ADD_COMMENT_SUCCESS:\r\n      let blogToAdd = state.find(i => i.blogId === action.payload.blogId);\r\n      let newState = state.map(blog => {\r\n        if (blog.blogId === action.payload.blogId) {\r\n          return Object.assign({}, blogToAdd, {\r\n            comments: [...blogToAdd.comments, action.payload]\r\n          });\r\n        } else {\r\n          return blog;\r\n        }\r\n      });\r\n      return newState;\r\n\r\n    case actionTypes.REMOVE_COMMENT_SUCCESS:\r\n      let blogToRemoveFrom = state.find(\r\n        i => i.blogId === action.payload.blogId\r\n      );\r\n      let newState2 = state.map(i => {\r\n        if (i.blogId === action.payload.blogId) {\r\n          return Object.assign({}, blogToRemoveFrom, {\r\n            comments: blogToRemoveFrom.comments.filter(\r\n              i => i.commentId !== action.payload.commentId\r\n            )\r\n          });\r\n        } else {\r\n          return i;\r\n        }\r\n      });\r\n      return newState2;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blogReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  currentCategory: {}\r\n};\r\n\r\nconst categoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CATEGORIES_SUCCESS:\r\n      return { ...state, categories: action.payload };\r\n    case actionTypes.CHANGE_CATEGORY:\r\n      return { ...state, currentCategory: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default categoryReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false\r\n};\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.IS_LOADING:\r\n      return { ...state, loading: true };\r\n    case actionTypes.NOT_LOADING:\r\n      return { ...state, loading: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    authenticated : false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTHENTICATE:\r\n            return { ...state, authenticated: true };\r\n        case actionTypes.UNAUTHENTICATE:\r\n            return { ...state, authenticated: false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport blogReducer from \"./blogReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport uiReducer from \"./uiReducer\";\r\nimport authReducer from './authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  blogReducer,\r\n  categoryReducer,\r\n    uiReducer,\r\n  authReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//const configureStore = () => createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst configureStore = () =>\r\n  createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n//Redux\nimport configureStore from \"./Redux/reducers/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}